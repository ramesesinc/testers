<?xml version="1.0" encoding="UTF-8"?>
<project name="launcher" default="compile" basedir=".">
    
    <target name="-init">
        <property file="conf.properties"/>
        
        <taskdef resource="net/sf/antcontrib/antcontrib.properties">
            <classpath>
                <pathelement location="../../lib/ant-contrib-0.6.jar"/>
            </classpath>
        </taskdef> 
        <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy">
            <classpath>
                <pathelement location="${platform.libs.dir}/client/groovy-all-1.6.9.jar"/>
                <pathelement location="${platform.libs.dir}/client/rameses-common2.jar"/>
            </classpath> 
        </taskdef> 
        
        <groovy>
        <![CDATA[
            def modulename = properties['lgu.type'];
            if (!modulename) {
                modulename = 'municipality';
                properties['lgu.type'] = modulename;
            } else if (modulename == 'remote') {
                modulename = properties['remote.type']; 
            } 

            def conffile = new java.io.File(properties['basedir'] +'/modules/'+ modulename +'/conf.properties'); 
            if (conffile.exists()) { 
                ant.property(file: conffile.absolutePath); 
                ant.property(name: 'setup.conf.path', value: conffile.absolutePath)
            } else { 
                throw new Exception(conffile.absolutePath + ' does not exist'); 
            }  
        ]]>
        </groovy> 
    </target> 
    
    <target name="compile" depends="-init">
        <groovy>
        <![CDATA[ 
            def ANT_HOME = properties['ant.home']; 
            def CLASSPATH = properties['java.class.path']; 

            ['download.shared.modules', 'download.app.modules'].each{key-> 
                def modules = properties[key];
                if (!modules) return; 

                modules.split(':').each{
                    def arr = it.split(','); 
                    def projname = arr[0];
                    if (!projname) return; 

                    ant.echo 'Compiling ' + projname + ' ...';
                    
                    def proj_dir = properties['projects.dir'] +'/client/'+ projname;
                    ant.delete(dir: proj_dir + '/dist', failonerror:false);
                    
                    def antb = new AntBuilder();                    
                    antb.project.basedir = proj_dir; 
                    antb.'import'(file: proj_dir + '/nbproject/build-impl.xml');
                    antb.project.executeTarget('jar'); 
                } 
            } 
        ]]> 
        </groovy>
    </target>    
    
</project>
